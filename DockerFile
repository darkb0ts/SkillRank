# Use a slim Python base image for efficiency
FROM python:3.9-slim

# Create separate directories for application code, Celery worker, and Redis
WORKDIR /app

# Copy requirements.txt for both app and worker
COPY requirements.txt .

# Install dependencies for the application (FastAPI)
RUN pip install -r requirements.txt

# Create a directory for the Celery worker
RUN mkdir -p worker

# Copy worker requirements (if any) and application code to the worker directory
COPY worker_requirements.txt worker/
WORKDIR worker
RUN pip install -r worker_requirements.txt  # Install worker-specific dependencies (optional)
COPY ../ .

# Expose ports for FastAPI application (adjust if needed)
EXPOSE 8000

# Redis service (consider using a separate container for production)
EXPOSE 6379

# Set working directory back to /app for Celery worker command
WORKDIR /app

# Celery worker command (modify as needed)
CMD ["celery", "-A", "worker.celery", "worker", "-l", "info"]

CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]